--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=16 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 16.1 cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END


-- Copyright (C) 2016  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN mux_job
( 
	data[31..0]	:	input;
	result[15..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[15..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data232w[1..0]	: WIRE;
	w_data246w[1..0]	: WIRE;
	w_data258w[1..0]	: WIRE;
	w_data270w[1..0]	: WIRE;
	w_data282w[1..0]	: WIRE;
	w_data294w[1..0]	: WIRE;
	w_data306w[1..0]	: WIRE;
	w_data318w[1..0]	: WIRE;
	w_data330w[1..0]	: WIRE;
	w_data342w[1..0]	: WIRE;
	w_data354w[1..0]	: WIRE;
	w_data366w[1..0]	: WIRE;
	w_data378w[1..0]	: WIRE;
	w_data390w[1..0]	: WIRE;
	w_data402w[1..0]	: WIRE;
	w_data414w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data414w[1..1]) # ((! sel_node[]) & w_data414w[0..0])), ((sel_node[] & w_data402w[1..1]) # ((! sel_node[]) & w_data402w[0..0])), ((sel_node[] & w_data390w[1..1]) # ((! sel_node[]) & w_data390w[0..0])), ((sel_node[] & w_data378w[1..1]) # ((! sel_node[]) & w_data378w[0..0])), ((sel_node[] & w_data366w[1..1]) # ((! sel_node[]) & w_data366w[0..0])), ((sel_node[] & w_data354w[1..1]) # ((! sel_node[]) & w_data354w[0..0])), ((sel_node[] & w_data342w[1..1]) # ((! sel_node[]) & w_data342w[0..0])), ((sel_node[] & w_data330w[1..1]) # ((! sel_node[]) & w_data330w[0..0])), ((sel_node[] & w_data318w[1..1]) # ((! sel_node[]) & w_data318w[0..0])), ((sel_node[] & w_data306w[1..1]) # ((! sel_node[]) & w_data306w[0..0])), ((sel_node[] & w_data294w[1..1]) # ((! sel_node[]) & w_data294w[0..0])), ((sel_node[] & w_data282w[1..1]) # ((! sel_node[]) & w_data282w[0..0])), ((sel_node[] & w_data270w[1..1]) # ((! sel_node[]) & w_data270w[0..0])), ((sel_node[] & w_data258w[1..1]) # ((! sel_node[]) & w_data258w[0..0])), ((sel_node[] & w_data246w[1..1]) # ((! sel_node[]) & w_data246w[0..0])), ((sel_node[] & w_data232w[1..1]) # ((! sel_node[]) & w_data232w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data232w[] = ( data[16..16], data[0..0]);
	w_data246w[] = ( data[17..17], data[1..1]);
	w_data258w[] = ( data[18..18], data[2..2]);
	w_data270w[] = ( data[19..19], data[3..3]);
	w_data282w[] = ( data[20..20], data[4..4]);
	w_data294w[] = ( data[21..21], data[5..5]);
	w_data306w[] = ( data[22..22], data[6..6]);
	w_data318w[] = ( data[23..23], data[7..7]);
	w_data330w[] = ( data[24..24], data[8..8]);
	w_data342w[] = ( data[25..25], data[9..9]);
	w_data354w[] = ( data[26..26], data[10..10]);
	w_data366w[] = ( data[27..27], data[11..11]);
	w_data378w[] = ( data[28..28], data[12..12]);
	w_data390w[] = ( data[29..29], data[13..13]);
	w_data402w[] = ( data[30..30], data[14..14]);
	w_data414w[] = ( data[31..31], data[15..15]);
END;
--VALID FILE
