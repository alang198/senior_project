--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=4 LPM_WIDTH=2 data enable eq
--VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_decode 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


-- Copyright (C) 2016  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 4 
SUBDESIGN decode_msa
( 
	data[1..0]	:	input;
	enable	:	input;
	eq[3..0]	:	output;
) 
VARIABLE 
	data_wire[1..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[3..0]	: WIRE;
	eq_wire[3..0]	: WIRE;
	w_anode423w[2..0]	: WIRE;
	w_anode436w[2..0]	: WIRE;
	w_anode444w[2..0]	: WIRE;
	w_anode452w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[3..0] = eq_wire[3..0];
	eq_wire[] = ( w_anode452w[2..2], w_anode444w[2..2], w_anode436w[2..2], w_anode423w[2..2]);
	w_anode423w[] = ( (w_anode423w[1..1] & (! data_wire[1..1])), (w_anode423w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode436w[] = ( (w_anode436w[1..1] & (! data_wire[1..1])), (w_anode436w[0..0] & data_wire[0..0]), enable_wire);
	w_anode444w[] = ( (w_anode444w[1..1] & data_wire[1..1]), (w_anode444w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode452w[] = ( (w_anode452w[1..1] & data_wire[1..1]), (w_anode452w[0..0] & data_wire[0..0]), enable_wire);
END;
--VALID FILE
